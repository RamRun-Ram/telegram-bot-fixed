"""
–°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
"""
import logging
from typing import Dict, Any, Optional
from telegram_client import TelegramClient
from config import ADMIN_CHAT_ID, NOTIFICATION_CHANNEL_ID

logger = logging.getLogger(__name__)

class NotificationType:
    INFO = "info"
    ERROR = "error"
    WARNING = "warning"

class NotificationSystem:
    """–°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"""
    
    def __init__(self, telegram_client: TelegramClient):
        self.telegram_client = telegram_client
        self.admin_chat_id = ADMIN_CHAT_ID
        self.notification_channel_id = NOTIFICATION_CHANNEL_ID
    
    async def send_info_notification(self, title: str, details: Dict[str, str]):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"""
        try:
            message = f"üì¢ {title}\n\n"
            for key, value in details.items():
                message += f"‚Ä¢ {key}: {value}\n"
            
            await self._send_notification(message, NotificationType.INFO)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
    
    async def send_error_notification(self, message: str, post: Optional[Dict[str, Any]] = None):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ"""
        try:
            error_message = f"‚ùå –û–®–ò–ë–ö–ê –ü–£–ë–õ–ò–ö–ê–¶–ò–ò\n\n"
            error_message += f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message}\n"
            
            if post:
                error_message += f"\n–î–µ—Ç–∞–ª–∏ –ø–æ—Å—Ç–∞:\n"
                error_message += f"‚Ä¢ –î–∞—Ç–∞: {post.get('date', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
                error_message += f"‚Ä¢ –í—Ä–µ–º—è: {post.get('time', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
                error_message += f"‚Ä¢ –î–ª–∏–Ω–∞: {len(post.get('text', ''))} —Å–∏–º–≤–æ–ª–æ–≤\n"
                error_message += f"‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {'–¥–∞' if post.get('image_urls') else '–Ω–µ—Ç'}\n"
            
            await self._send_notification(error_message, NotificationType.ERROR)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ: {e}")
    
    async def _send_notification(self, message: str, notification_type: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –∏–ª–∏ —á–∞—Ç"""
        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∫–∞–Ω–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            if self.notification_channel_id:
                try:
                    success = await self.telegram_client.bot.send_message(
                        chat_id=self.notification_channel_id,
                        text=message,
                        parse_mode='HTML'
                    )
                    if success:
                        logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª: {notification_type}")
                        return
                except Exception as e:
                    logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∫–∞–Ω–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")
            
            # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç
            if self.admin_chat_id:
                await self.telegram_client.bot.send_message(
                    chat_id=self.admin_chat_id,
                    text=message,
                    parse_mode='HTML'
                )
                logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç: {notification_type}")
            else:
                logger.warning("–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∞–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
