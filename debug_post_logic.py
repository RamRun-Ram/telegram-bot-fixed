#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ –ª–æ–≥–∏–∫–∏ –ø–æ—Å—Ç–æ–≤
"""

def test_image_post_processing():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–æ—Å—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º"""
    
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Å—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º...")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ _process_text_for_image_posts
    def _process_text_for_image_posts(text: str) -> str:
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ—Å—Ç–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ (HTML —Ñ–æ—Ä–º–∞—Ç)
        –û—Å—Ç–∞–≤–ª—è–µ—Ç HTML —Ç–µ–≥–∏ –∫–∞–∫ –µ—Å—Ç—å –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        """
        # –ó–∞–º–µ–Ω—è–µ–º <br> –Ω–∞ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        text = text.replace('<br>', '\n')
        text = text.replace('<br/>', '\n')
        text = text.replace('<br />', '\n')
        
        # –£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ HTML —Ç–µ–≥–∏, –æ—Å—Ç–∞–≤–ª—è–µ–º <b>, <i>, <u>
        text = text.replace('<div>', '')
        text = text.replace('</div>', '')
        text = text.replace('<p>', '')
        text = text.replace('</p>', '')
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ø–∏—Å–∫–∏
        text = text.replace('<ul>', '')
        text = text.replace('</ul>', '')
        text = text.replace('<ol>', '')
        text = text.replace('</ol>', '')
        text = text.replace('<li>', '‚Ä¢ ')
        text = text.replace('</li>', '\n')
        
        # –ù–ï –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º <b>, <i>, <u> - –æ—Å—Ç–∞–≤–ª—è–µ–º HTML –¥–ª—è –ø–æ—Å—Ç–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        # Telegram –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —ç—Ç–∏ —Ç–µ–≥–∏ –≤ HTML —Ä–µ–∂–∏–º–µ
        
        return text
    
    # –¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å HTML —Ç–µ–≥–∞–º–∏
    test_text = """
<b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b>
<i>–ö—É—Ä—Å–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç</i>
<u>–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç</u>
<br>
<div>Div —Ç–µ–≥</div>
<p>–ü–∞—Ä–∞–≥—Ä–∞—Ñ</p>
<ul>
<li>–≠–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ 1</li>
<li>–≠–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ 2</li>
</ul>
    """.strip()
    
    print("üìù –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:")
    print(test_text)
    print(f"–î–ª–∏–Ω–∞: {len(test_text)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç
    processed_text = _process_text_for_image_posts(test_text)
    
    print("\nüìù –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:")
    print(processed_text)
    print(f"–î–ª–∏–Ω–∞: {len(processed_text)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ HTML —Ç–µ–≥–∏ –æ—Å—Ç–∞–ª–∏—Å—å
    if '<b>' in processed_text and '<i>' in processed_text and '<u>' in processed_text:
        print("‚úÖ HTML —Ç–µ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã (–ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è –ø–æ—Å—Ç–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏)")
    else:
        print("‚ùå HTML —Ç–µ–≥–∏ –ù–ï —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ)")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ div –∏ p —Ç–µ–≥–∏ —É–¥–∞–ª–µ–Ω—ã
    if '<div>' not in processed_text and '<p>' not in processed_text:
        print("‚úÖ –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–µ–≥–∏ —É–¥–∞–ª–µ–Ω—ã")
    else:
        print("‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–µ–≥–∏ –ù–ï —É–¥–∞–ª–µ–Ω—ã")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    image_url = "https://example.com/image.jpg"
    final_message = f'{processed_text}\n\n<a href="{image_url}">üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</a>'
    
    print("\nüìù –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:")
    print(final_message)
    print(f"–î–ª–∏–Ω–∞: {len(final_message)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    print("\nüéØ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
    print("- HTML —Ç–µ–≥–∏ <b>, <i>, <u> –¥–æ–ª–∂–Ω—ã –æ—Å—Ç–∞—Ç—å—Å—è")
    print("- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –∫–æ–Ω—Ü–µ —Å —Å—Å—ã–ª–∫–æ–π")
    print("- –î–ª–∏–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å ~4000 —Å–∏–º–≤–æ–ª–æ–≤ (–µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –¥–ª–∏–Ω–Ω—ã–π)")

def test_markdown_post_processing():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–æ—Å—Ç–∞ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Å—Ç–∞ –ë–ï–ó –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ format_text_for_telegram_markdown
    def format_text_for_telegram_markdown(text: str) -> str:
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è Markdown –ø–æ—Å—Ç–æ–≤ (–±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)
        """
        # –ó–∞–º–µ–Ω—è–µ–º HTML —Ç–µ–≥–∏ –Ω–∞ Markdown
        text = text.replace('<b>', '**')
        text = text.replace('</b>', '**')
        text = text.replace('<i>', '*')
        text = text.replace('</i>', '*')
        text = text.replace('<u>', '__')
        text = text.replace('</u>', '__')
        text = text.replace('<br>', '\n')
        text = text.replace('<br/>', '\n')
        text = text.replace('<br />', '\n')
        
        # –£–¥–∞–ª—è–µ–º HTML —Ç–µ–≥–∏
        text = text.replace('<div>', '')
        text = text.replace('</div>', '')
        text = text.replace('<p>', '')
        text = text.replace('</p>', '')
        
        return text
    
    # –¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å HTML —Ç–µ–≥–∞–º–∏
    test_text = """
<b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b>
<i>–ö—É—Ä—Å–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç</i>
<u>–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç</u>
<br>
<div>Div —Ç–µ–≥</div>
<p>–ü–∞—Ä–∞–≥—Ä–∞—Ñ</p>
    """.strip()
    
    print("üìù –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:")
    print(test_text)
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç
    processed_text = format_text_for_telegram_markdown(test_text)
    
    print("\nüìù –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç (Markdown):")
    print(processed_text)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ HTML —Ç–µ–≥–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ Markdown
    if '**' in processed_text and '*' in processed_text and '__' in processed_text:
        print("‚úÖ HTML —Ç–µ–≥–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ Markdown (–ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è –ø–æ—Å—Ç–æ–≤ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)")
    else:
        print("‚ùå HTML —Ç–µ–≥–∏ –ù–ï –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ Markdown (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ)")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ div –∏ p —Ç–µ–≥–∏ —É–¥–∞–ª–µ–Ω—ã
    if '<div>' not in processed_text and '<p>' not in processed_text:
        print("‚úÖ –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–µ–≥–∏ —É–¥–∞–ª–µ–Ω—ã")
    else:
        print("‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–µ–≥–∏ –ù–ï —É–¥–∞–ª–µ–Ω—ã")

if __name__ == "__main__":
    test_image_post_processing()
    test_markdown_post_processing()
    
    print("\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
    print("–õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
    print("–ï—Å–ª–∏ –ø–æ—Å—Ç—ã –≤—Å–µ –µ—â–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤:")
    print("1. –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–∞ Railway (–Ω—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å 2-3 –º–∏–Ω—É—Ç—ã)")
    print("2. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –≤—ã–±–æ—Ä–µ –º–µ—Ç–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏")
    print("3. –ü—Ä–æ–±–ª–µ–º–∞—Ö —Å Telegram API")
