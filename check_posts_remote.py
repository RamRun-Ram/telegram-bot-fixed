#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Å—Ç–æ–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
"""
import os
import sys
from datetime import datetime, timedelta
import pytz

def check_posts_timing():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Ä–µ–º—è –ø–æ—Å—Ç–æ–≤"""
    print("üïê –ü–†–û–í–ï–†–ö–ê –í–†–ï–ú–ï–ù–ò –ü–û–°–¢–û–í")
    print("=" * 50)
    
    # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ø–æ –ú–æ—Å–∫–≤–µ
    moscow_tz = pytz.timezone('Europe/Moscow')
    current_time = datetime.now(moscow_tz)
    
    print(f"üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è (–ú–æ—Å–∫–≤–∞): {current_time.strftime('%Y-%m-%d %H:%M:%S MSK')}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –≤—Ä–µ–º–µ–Ω–∏
    from config import LOOKBACK_MINUTES
    print(f"üìè LOOKBACK_MINUTES: {LOOKBACK_MINUTES}")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã
    test_posts = []
    
    # –ü–æ—Å—Ç –Ω–∞ 1 –º–∏–Ω—É—Ç—É –≤ –±—É–¥—É—â–µ–º
    future_post = current_time + timedelta(minutes=1)
    test_posts.append({
        'date': future_post.strftime('%d.%m.%y'),
        'time': future_post.strftime('%H:%M'),
        'description': '–ü–æ—Å—Ç –Ω–∞ +1 –º–∏–Ω—É—Ç—É'
    })
    
    # –ü–æ—Å—Ç –Ω–∞ 2 –º–∏–Ω—É—Ç—ã –≤ –±—É–¥—É—â–µ–º
    future_post2 = current_time + timedelta(minutes=2)
    test_posts.append({
        'date': future_post2.strftime('%d.%m.%y'),
        'time': future_post2.strftime('%H:%M'),
        'description': '–ü–æ—Å—Ç –Ω–∞ +2 –º–∏–Ω—É—Ç—ã'
    })
    
    # –ü–æ—Å—Ç –Ω–∞ 5 –º–∏–Ω—É—Ç –≤ –±—É–¥—É—â–µ–º
    future_post5 = current_time + timedelta(minutes=5)
    test_posts.append({
        'date': future_post5.strftime('%d.%m.%y'),
        'time': future_post5.strftime('%H:%M'),
        'description': '–ü–æ—Å—Ç –Ω–∞ +5 –º–∏–Ω—É—Ç'
    })
    
    # –ü–æ—Å—Ç –Ω–∞ 10 –º–∏–Ω—É—Ç –≤ –±—É–¥—É—â–µ–º
    future_post10 = current_time + timedelta(minutes=10)
    test_posts.append({
        'date': future_post10.strftime('%d.%m.%y'),
        'time': future_post10.strftime('%H:%M'),
        'description': '–ü–æ—Å—Ç –Ω–∞ +10 –º–∏–Ω—É—Ç'
    })
    
    print(f"\nüìù –¢–ï–°–¢–û–í–´–ï –ü–û–°–¢–´:")
    for i, post in enumerate(test_posts, 1):
        print(f"  {i}. {post['description']}: {post['date']} {post['time']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –≤—Ä–µ–º–µ–Ω–∏
        try:
            post_datetime = datetime.strptime(f"{post['date']} {post['time']}", "%d.%m.%y %H:%M")
            post_datetime = moscow_tz.localize(post_datetime)
            
            time_diff = (current_time - post_datetime).total_seconds() / 60
            should_publish = -LOOKBACK_MINUTES <= time_diff <= 0
            
            status = "‚úÖ –î–ê" if should_publish else "‚ùå –ù–ï–¢"
            print(f"     –†–∞–∑–Ω–∏—Ü–∞: {time_diff:.1f} –º–∏–Ω, –ü—É–±–ª–∏–∫–æ–≤–∞—Ç—å: {status}")
            
        except Exception as e:
            print(f"     ‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
    
    return test_posts

def check_google_sheets_connection():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets"""
    print("\nüìã –ü–†–û–í–ï–†–ö–ê GOOGLE SHEETS")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    google_vars = [
        "GOOGLE_SHEET_ID", "GOOGLE_SHEET_NAME", "GOOGLE_PROJECT_ID",
        "GOOGLE_PRIVATE_KEY_ID", "GOOGLE_PRIVATE_KEY", "GOOGLE_CLIENT_EMAIL",
        "GOOGLE_CLIENT_ID", "GOOGLE_CLIENT_X509_CERT_URL"
    ]
    
    missing_vars = []
    for var in google_vars:
        value = os.getenv(var)
        if not value or value.startswith("YOUR_"):
            missing_vars.append(var)
            print(f"‚ùå {var}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print(f"‚úÖ {var}: OK")
    
    if missing_vars:
        print(f"\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {', '.join(missing_vars)}")
        return False
    else:
        print(f"\n‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Google Sheets —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return True

def check_telegram_connection():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram"""
    print("\nüì± –ü–†–û–í–ï–†–ö–ê TELEGRAM")
    print("=" * 50)
    
    telegram_vars = ["TELEGRAM_BOT_TOKEN", "TELEGRAM_CHANNEL_ID"]
    
    missing_vars = []
    for var in telegram_vars:
        value = os.getenv(var)
        if not value or value.startswith("YOUR_"):
            missing_vars.append(var)
            print(f"‚ùå {var}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print(f"‚úÖ {var}: OK")
    
    if missing_vars:
        print(f"\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {', '.join(missing_vars)}")
        return False
    else:
        print(f"\n‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Telegram —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ –ü–£–ë–õ–ò–ö–ê–¶–ò–ò")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å—Ç–æ–≤
    test_posts = check_posts_timing()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Google Sheets
    sheets_ok = check_google_sheets_connection()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram
    telegram_ok = check_telegram_connection()
    
    print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´")
    print("=" * 30)
    print(f"üïê –õ–æ–≥–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–∏: OK")
    print(f"üìã Google Sheets: {'OK' if sheets_ok else 'ERROR'}")
    print(f"üì± Telegram: {'OK' if telegram_ok else 'ERROR'}")
    
    if sheets_ok and telegram_ok:
        print("\nüéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!")
        print("üí° –°–∏—Å—Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("\n‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´!")
        if not sheets_ok:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å Google Sheets - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        if not telegram_ok:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å Telegram - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")

if __name__ == "__main__":
    main()
