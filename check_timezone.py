#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤ –∏ –≤—Ä–µ–º–µ–Ω–∏
"""
import os
import sys
from datetime import datetime
import pytz

def check_timezones():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —á–∞—Å–æ–≤—ã–µ –ø–æ—è—Å–∞"""
    print("üïê –ü–†–û–í–ï–†–ö–ê –ß–ê–°–û–í–´–• –ü–û–Ø–°–û–í")
    print("=" * 50)
    
    # UTC –≤—Ä–µ–º—è
    utc_now = datetime.now(pytz.UTC)
    print(f"üåç UTC –≤—Ä–µ–º—è: {utc_now.strftime('%Y-%m-%d %H:%M:%S %Z')}")
    
    # –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è
    moscow_tz = pytz.timezone('Europe/Moscow')
    moscow_now = datetime.now(moscow_tz)
    print(f"üá∑üá∫ –ú–æ—Å–∫–≤–∞ –≤—Ä–µ–º—è: {moscow_now.strftime('%Y-%m-%d %H:%M:%S %Z')}")
    
    # –õ–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —Å–∏—Å—Ç–µ–º—ã
    local_now = datetime.now()
    print(f"üíª –õ–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: {local_now.strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É
    print(f"\nüìä –†–ê–ó–ù–ò–¶–ê –í–†–ï–ú–ï–ù–ò:")
    print(f"–ú–æ—Å–∫–≤–∞ - UTC: {moscow_now.utcoffset()}")
    print(f"–ú–æ—Å–∫–≤–∞ - –õ–æ–∫–∞–ª—å–Ω–æ–µ: {(moscow_now - local_now.replace(tzinfo=moscow_tz)).total_seconds() / 3600:.1f} —á–∞—Å–æ–≤")
    
    return moscow_now

def check_system_time_logic():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏–∫—É –≤—Ä–µ–º–µ–Ω–∏ –≤ —Å–∏—Å—Ç–µ–º–µ"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –õ–û–ì–ò–ö–ò –í–†–ï–ú–ï–ù–ò –°–ò–°–¢–ï–ú–´")
    print("=" * 50)
    
    try:
        from main import TelegramAutomation
        
        automation = TelegramAutomation()
        moscow_tz = pytz.timezone('Europe/Moscow')
        current_time = datetime.now(moscow_tz)
        
        print(f"üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è (—Å–∏—Å—Ç–µ–º–∞): {current_time.strftime('%Y-%m-%d %H:%M:%S %Z')}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –Ω–∞ 1 –º–∏–Ω—É—Ç—É –≤ –±—É–¥—É—â–µ–º
        test_post = {
            'date': current_time.strftime('%d.%m.%y'),
            'time': (current_time + pytz.timedelta(minutes=1)).strftime('%H:%M'),
            'row_index': 999
        }
        
        print(f"üìù –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç: {test_post['date']} {test_post['time']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É
        should_publish = automation._should_publish_post(test_post, current_time)
        print(f"‚úÖ –î–æ–ª–∂–µ–Ω –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å—Å—è: {should_publish}")
        
        # –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        print(f"\nüîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê:")
        post_date_str = test_post['date']
        post_time_str = test_post['time']
        
        try:
            post_datetime = datetime.strptime(f"{post_date_str} {post_time_str}", "%d.%m.%Y %H:%M")
            post_datetime = moscow_tz.localize(post_datetime)
            print(f"üìÖ –í—Ä–µ–º—è –ø–æ—Å—Ç–∞: {post_datetime.strftime('%Y-%m-%d %H:%M:%S %Z')}")
            
            time_diff = (current_time - post_datetime).total_seconds() / 60
            print(f"‚è∞ –†–∞–∑–Ω–∏—Ü–∞: {time_diff:.1f} –º–∏–Ω—É—Ç")
            
            from config import LOOKBACK_MINUTES
            print(f"üìè LOOKBACK_MINUTES: {LOOKBACK_MINUTES}")
            print(f"üéØ –£—Å–ª–æ–≤–∏–µ: -{LOOKBACK_MINUTES} <= {time_diff:.1f} <= 0")
            print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {-LOOKBACK_MINUTES <= time_diff <= 0}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤—Ä–µ–º–µ–Ω–∏: {e}")
        
        return should_publish
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã: {e}")
        return False

def check_google_sheets_posts():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ—Å—Ç—ã –≤ Google Sheets"""
    print("\nüìã –ü–†–û–í–ï–†–ö–ê –ü–û–°–¢–û–í –í GOOGLE SHEETS")
    print("=" * 50)
    
    try:
        from google_sheets_client import GoogleSheetsClient
        
        client = GoogleSheetsClient()
        if not client.service:
            print("‚ùå Google Sheets API –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return False
        
        posts = client.get_pending_posts()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}")
        
        if posts:
            print("\nüìù –ü–µ—Ä–≤—ã–µ 3 –ø–æ—Å—Ç–∞:")
            for i, post in enumerate(posts[:3]):
                print(f"  {i+1}. –°—Ç—Ä–æ–∫–∞ {post.get('row_index', 'N/A')}")
                print(f"     –î–∞—Ç–∞: {post.get('date', 'N/A')}")
                print(f"     –í—Ä–µ–º—è: {post.get('time', 'N/A')}")
                print(f"     –°—Ç–∞—Ç—É—Å: {post.get('status', 'N/A')}")
                print(f"     –¢–µ–∫—Å—Ç: {post.get('text', 'N/A')[:50]}...")
                print()
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Google Sheets: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ß–ê–°–û–í–´–• –ü–û–Ø–°–û–í –ò –í–†–ï–ú–ï–ù–ò")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∞—Å–æ–≤—ã–µ –ø–æ—è—Å–∞
    moscow_time = check_timezones()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É —Å–∏—Å—Ç–µ–º—ã
    system_ok = check_system_time_logic()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç—ã –≤ Google Sheets
    sheets_ok = check_google_sheets_posts()
    
    print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´")
    print("=" * 30)
    print(f"üïê –ß–∞—Å–æ–≤—ã–µ –ø–æ—è—Å–∞: OK")
    print(f"üîç –õ–æ–≥–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã: {'OK' if system_ok else 'ERROR'}")
    print(f"üìã Google Sheets: {'OK' if sheets_ok else 'ERROR'}")
    
    if system_ok and sheets_ok:
        print("\nüéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!")
    else:
        print("\n‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´!")

if __name__ == "__main__":
    main()
