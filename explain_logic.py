#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ –ª–æ–≥–∏–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤
"""
from datetime import datetime, timedelta
import pytz

def explain_system_logic():
    """–û–±—ä—è—Å–Ω—è–µ—Ç –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã"""
    print("üîç –õ–û–ì–ò–ö–ê –†–ê–ë–û–¢–´ –°–ò–°–¢–ï–ú–´ –ü–£–ë–õ–ò–ö–ê–¶–ò–ò –ü–û–°–¢–û–í")
    print("=" * 60)
    
    # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    moscow_tz = pytz.timezone('Europe/Moscow')
    current_time = datetime.now(moscow_tz)
    
    print(f"üïê –¢–ï–ö–£–©–ï–ï –í–†–ï–ú–Ø: {current_time.strftime('%Y-%m-%d %H:%M:%S MSK')}")
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏—Å—Ç–µ–º—ã
    CHECK_INTERVAL_MINUTES = 2  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã
    LOOKBACK_MINUTES = 5        # –ò—â–µ–º –ø–æ—Å—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –º–∏–Ω—É—Ç
    
    print(f"\nüìä –ü–ê–†–ê–ú–ï–¢–†–´ –°–ò–°–¢–ï–ú–´:")
    print(f"   üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ: {CHECK_INTERVAL_MINUTES} –º–∏–Ω—É—Ç—ã")
    print(f"   ‚è∞ –ü–æ–∏—Å–∫ –ø–æ—Å—Ç–æ–≤: –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ {LOOKBACK_MINUTES} –º–∏–Ω—É—Ç")
    
    print(f"\nüßÆ –õ–û–ì–ò–ö–ê –í–†–ï–ú–ï–ù–ò:")
    print(f"   –§–æ—Ä–º—É–ª–∞: 0 <= time_diff <= {LOOKBACK_MINUTES}")
    print(f"   time_diff = (—Ç–µ–∫—É—â–µ–µ_–≤—Ä–µ–º—è - –≤—Ä–µ–º—è_–ø–æ—Å—Ç–∞) –≤ –º–∏–Ω—É—Ç–∞—Ö")
    print(f"   time_diff > 0  = –ø–æ—Å—Ç –≤ –ø—Ä–æ—à–ª–æ–º")
    print(f"   time_diff = 0  = –ø–æ—Å—Ç —Å–µ–π—á–∞—Å")
    print(f"   time_diff < 0  = –ø–æ—Å—Ç –≤ –±—É–¥—É—â–µ–º")
    
    print(f"\n‚úÖ –ü–û–°–¢ –ü–£–ë–õ–ò–ö–£–ï–¢–°–Ø, –ï–°–õ–ò:")
    print(f"   0 <= time_diff <= {LOOKBACK_MINUTES}")
    print(f"   –¢–æ –µ—Å—Ç—å –ø–æ—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å:")
    print(f"   ‚Ä¢ –°–µ–π—á–∞—Å (time_diff = 0)")
    print(f"   ‚Ä¢ –í –ø—Ä–æ—à–ª–æ–º (–Ω–æ –Ω–µ –±–æ–ª–µ–µ —á–µ–º –Ω–∞ {LOOKBACK_MINUTES} –º–∏–Ω—É—Ç)")
    print(f"   ‚Ä¢ –ù–ï –≤ –±—É–¥—É—â–µ–º!")
    
    # –ü—Ä–∏–º–µ—Ä—ã
    print(f"\nüìù –ü–†–ò–ú–ï–†–´:")
    
    examples = [
        ("–ü–æ—Å—Ç –Ω–∞ +10 –º–∏–Ω—É—Ç", current_time + timedelta(minutes=10)),
        ("–ü–æ—Å—Ç –Ω–∞ +5 –º–∏–Ω—É—Ç", current_time + timedelta(minutes=5)),
        ("–ü–æ—Å—Ç –Ω–∞ +2 –º–∏–Ω—É—Ç—ã", current_time + timedelta(minutes=2)),
        ("–ü–æ—Å—Ç –Ω–∞ +1 –º–∏–Ω—É—Ç—É", current_time + timedelta(minutes=1)),
        ("–ü–æ—Å—Ç —Å–µ–π—á–∞—Å", current_time),
        ("–ü–æ—Å—Ç -1 –º–∏–Ω—É—Ç—É –Ω–∞–∑–∞–¥", current_time - timedelta(minutes=1)),
        ("–ü–æ—Å—Ç -5 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥", current_time - timedelta(minutes=5)),
        ("–ü–æ—Å—Ç -10 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥", current_time - timedelta(minutes=10)),
    ]
    
    for name, post_time in examples:
        time_diff = (current_time - post_time).total_seconds() / 60
        should_publish = 0 <= time_diff <= LOOKBACK_MINUTES
        status = "‚úÖ –î–ê" if should_publish else "‚ùå –ù–ï–¢"
        
        print(f"   {name:20}: {status} (—Ä–∞–∑–Ω–∏—Ü–∞: {time_diff:6.1f} –º–∏–Ω)")
    
    print(f"\nüéØ –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ô –ü–†–ò–ú–ï–†:")
    print(f"   –ï—Å–ª–∏ —Å–µ–π—á–∞—Å {current_time.strftime('%H:%M')}, —Ç–æ –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –ø–æ—Å—Ç—ã:")
    print(f"   ‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ {current_time.strftime('%H:%M')} (—Å–µ–π—á–∞—Å)")
    print(f"   ‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ {(current_time - timedelta(minutes=1)).strftime('%H:%M')} (-1 –º–∏–Ω)")
    print(f"   ‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ {(current_time - timedelta(minutes=2)).strftime('%H:%M')} (-2 –º–∏–Ω)")
    print(f"   ‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ {(current_time - timedelta(minutes=3)).strftime('%H:%M')} (-3 –º–∏–Ω)")
    print(f"   ‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ {(current_time - timedelta(minutes=4)).strftime('%H:%M')} (-4 –º–∏–Ω)")
    print(f"   ‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ {(current_time - timedelta(minutes=5)).strftime('%H:%M')} (-5 –º–∏–Ω)")
    
    print(f"\n‚ùå –ù–ï –ü–£–ë–õ–ò–ö–£–Æ–¢–°–Ø –ü–û–°–¢–´:")
    print(f"   ‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ {(current_time + timedelta(minutes=1)).strftime('%H:%M')} (+1 –º–∏–Ω)")
    print(f"   ‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ {(current_time + timedelta(minutes=5)).strftime('%H:%M')} (+5 –º–∏–Ω)")
    print(f"   ‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ {(current_time + timedelta(minutes=10)).strftime('%H:%M')} (+10 –º–∏–Ω)")
    print(f"   ‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ {(current_time - timedelta(minutes=6)).strftime('%H:%M')} (-6 –º–∏–Ω)")
    print(f"   ‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ {(current_time - timedelta(minutes=10)).strftime('%H:%M')} (-10 –º–∏–Ω)")

def check_actual_posts():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –ø–æ—Å—Ç—ã –≤ —Å–∏—Å—Ç–µ–º–µ"""
    print(f"\nüîç –ü–†–û–í–ï–†–ö–ê –†–ï–ê–õ–¨–ù–´–• –ü–û–°–¢–û–í")
    print("=" * 60)
    
    try:
        from main import TelegramAutomation
        
        automation = TelegramAutomation()
        moscow_tz = pytz.timezone('Europe/Moscow')
        current_time = datetime.now(moscow_tz)
        
        print(f"üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {current_time.strftime('%Y-%m-%d %H:%M:%S MSK')}")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç—ã
        posts = automation.sheets_client.get_pending_posts()
        
        if not posts:
            print("‚ùå –ù–µ—Ç –ø–æ—Å—Ç–æ–≤ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º '–û–∂–∏–¥–∞–µ—Ç'")
            return
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}")
        
        for i, post in enumerate(posts):
            print(f"\nüìù –ü–û–°–¢ #{i+1}:")
            print(f"   –°—Ç—Ä–æ–∫–∞: {post.get('row_index', 'N/A')}")
            print(f"   –î–∞—Ç–∞: {post.get('date', 'N/A')}")
            print(f"   –í—Ä–µ–º—è: {post.get('time', 'N/A')}")
            print(f"   –°—Ç–∞—Ç—É—Å: {post.get('status', 'N/A')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –≤—Ä–µ–º–µ–Ω–∏
            if automation._should_publish_post(post, current_time):
                print(f"   ‚úÖ –î–û–õ–ñ–ï–ù –ü–£–ë–õ–ò–ö–û–í–ê–¢–¨–°–Ø")
            else:
                print(f"   ‚ùå –ù–ï –ü–û–î–•–û–î–ò–¢ –ü–û –í–†–ï–ú–ï–ù–ò")
                
                # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
                post_date_str = post.get('date', '')
                post_time_str = post.get('time', '')
                
                try:
                    post_datetime = datetime.strptime(f"{post_date_str} {post_time_str}", "%d.%m.%y %H:%M")
                    post_datetime = moscow_tz.localize(post_datetime)
                    
                    time_diff = (current_time - post_datetime).total_seconds() / 60
                    
                    print(f"   üìä –î–µ—Ç–∞–ª–∏:")
                    print(f"      –í—Ä–µ–º—è –ø–æ—Å—Ç–∞: {post_datetime.strftime('%Y-%m-%d %H:%M:%S MSK')}")
                    print(f"      –†–∞–∑–Ω–∏—Ü–∞: {time_diff:.1f} –º–∏–Ω—É—Ç")
                    print(f"      –£—Å–ª–æ–≤–∏–µ: -5 <= {time_diff:.1f} <= 0")
                    print(f"      –†–µ–∑—É–ª—å—Ç–∞—Ç: {-5 <= time_diff <= 0}")
                    
                except Exception as e:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤—Ä–µ–º–µ–Ω–∏: {e}")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Å—Ç–æ–≤: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    explain_system_logic()
    check_actual_posts()

if __name__ == "__main__":
    main()
