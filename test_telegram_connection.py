#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram –∫–∞–Ω–∞–ª—É
"""
import os
import sys
import asyncio

async def test_telegram_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram –∫–∞–Ω–∞–ª—É"""
    print("üîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö TELEGRAM –ö–ê–ù–ê–õ–£")
    print("=" * 60)
    
    try:
        from telegram_client import TelegramClient
        from config import TELEGRAM_CHANNEL_ID, TELEGRAM_BOT_TOKEN
        
        print(f"üì± TELEGRAM_BOT_TOKEN: {'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if TELEGRAM_BOT_TOKEN and not TELEGRAM_BOT_TOKEN.startswith('YOUR_') else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
        print(f"üì∫ TELEGRAM_CHANNEL_ID: {TELEGRAM_CHANNEL_ID}")
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        client = TelegramClient()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        print(f"\nüîå –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...")
        connection_ok = await client.test_connection()
        
        if connection_ok:
            print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram —É—Å–ø–µ—à–Ω–æ!")
            
            # –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            print(f"\nüì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
            test_text = "üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–∞–Ω–∞–ª—É"
            
            success = await client.send_text_message(test_text)
            
            if success:
                print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
                print(f"üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–Ω–∞–ª: {TELEGRAM_CHANNEL_ID}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

async def test_channel_access():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏"""
    print("\nüîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–û–°–¢–£–ü–ê –ö –ö–ê–ù–ê–õ–£")
    print("=" * 60)
    
    try:
        from telegram_client import TelegramClient
        from config import TELEGRAM_CHANNEL_ID
        
        client = TelegramClient()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã ID –∫–∞–Ω–∞–ª–∞
        test_ids = [
            TELEGRAM_CHANNEL_ID,
            str(TELEGRAM_CHANNEL_ID),
            f"@{TELEGRAM_CHANNEL_ID}" if not str(TELEGRAM_CHANNEL_ID).startswith('@') else TELEGRAM_CHANNEL_ID,
            int(TELEGRAM_CHANNEL_ID) if str(TELEGRAM_CHANNEL_ID).startswith('-100') else TELEGRAM_CHANNEL_ID
        ]
        
        for i, test_id in enumerate(test_ids):
            print(f"\nüß™ –¢–µ—Å—Ç {i+1}: {test_id} (—Ç–∏–ø: {type(test_id)})")
            
            try:
                chat_info = await client.bot.get_chat(test_id)
                print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ: {chat_info.title} (ID: {chat_info.id})")
                return True
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TELEGRAM –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø")
    print("=" * 70)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    connection_ok = await test_telegram_connection()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É
    channel_ok = await test_channel_access()
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"   –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram: {'‚úÖ OK' if connection_ok else '‚ùå ERROR'}")
    print(f"   –î–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É: {'‚úÖ OK' if channel_ok else '‚ùå ERROR'}")
    
    if connection_ok and channel_ok:
        print(f"\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print(f"üì± Telegram –∫–∞–Ω–∞–ª –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    else:
        print(f"\n‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´!")
        if not connection_ok:
            print(f"   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ TELEGRAM_BOT_TOKEN")
        if not channel_ok:
            print(f"   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ TELEGRAM_CHANNEL_ID")
            print(f"   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª")
            print(f"   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")

if __name__ == "__main__":
    asyncio.run(main())
