#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Google Sheets API
"""
import os
import logging
from google_sheets_client import GoogleSheetsClient

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def debug_google_sheets():
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Google Sheets API"""
    
    logger.info("üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Google Sheets API...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ—Ç–¥–µ–ª—å–Ω–æ
    vars_to_check = {
        "GOOGLE_SHEET_ID": os.getenv("GOOGLE_SHEET_ID"),
        "GOOGLE_PROJECT_ID": os.getenv("GOOGLE_PROJECT_ID"),
        "GOOGLE_PRIVATE_KEY_ID": os.getenv("GOOGLE_PRIVATE_KEY_ID"),
        "GOOGLE_PRIVATE_KEY": os.getenv("GOOGLE_PRIVATE_KEY"),
        "GOOGLE_CLIENT_EMAIL": os.getenv("GOOGLE_CLIENT_EMAIL"),
        "GOOGLE_CLIENT_ID": os.getenv("GOOGLE_CLIENT_ID"),
        "GOOGLE_CLIENT_X509_CERT_URL": os.getenv("GOOGLE_CLIENT_X509_CERT_URL")
    }
    
    logger.info("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    for var_name, var_value in vars_to_check.items():
        if var_value and not var_value.startswith("YOUR_"):
            logger.info(f"‚úÖ {var_name}: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ({len(var_value)} —Å–∏–º–≤–æ–ª–æ–≤)")
        else:
            logger.error(f"‚ùå {var_name}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç placeholder")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç GOOGLE_PRIVATE_KEY
    private_key = os.getenv("GOOGLE_PRIVATE_KEY")
    if private_key and not private_key.startswith("YOUR_"):
        logger.info("üîç –ê–Ω–∞–ª–∏–∑ GOOGLE_PRIVATE_KEY:")
        logger.info(f"   –î–ª–∏–Ω–∞: {len(private_key)} —Å–∏–º–≤–æ–ª–æ–≤")
        logger.info(f"   –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å: {private_key[:20]}...")
        logger.info(f"   –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞: ...{private_key[-20:]}")
        logger.info(f"   –°–æ–¥–µ—Ä–∂–∏—Ç BEGIN: {'BEGIN PRIVATE KEY' in private_key}")
        logger.info(f"   –°–æ–¥–µ—Ä–∂–∏—Ç END: {'END PRIVATE KEY' in private_key}")
        logger.info(f"   –°–æ–¥–µ—Ä–∂–∏—Ç \\n: {'\\n' in private_key}")
    
    # –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç
    logger.info("üîß –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è GoogleSheetsClient...")
    try:
        client = GoogleSheetsClient()
        
        if client.service is None:
            logger.error("‚ùå GoogleSheetsClient.service = None")
            logger.error("   –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å")
        else:
            logger.info("‚úÖ GoogleSheetsClient.service —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
            
            # –ü—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç—É—é –æ–ø–µ—Ä–∞—Ü–∏—é
            logger.info("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç—É—é –æ–ø–µ—Ä–∞—Ü–∏—é...")
            try:
                # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞–±–ª–∏—Ü–µ
                sheet_id = os.getenv("GOOGLE_SHEET_ID")
                if sheet_id and not sheet_id.startswith("YOUR_"):
                    result = client.service.spreadsheets().get(spreadsheetId=sheet_id).execute()
                    logger.info(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ –Ω–∞–π–¥–µ–Ω–∞: {result.get('properties', {}).get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
                else:
                    logger.warning("‚ö†Ô∏è GOOGLE_SHEET_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Ç–∞–±–ª–∏—Ü—ã")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ —Ç–∞–±–ª–∏—Ü–µ: {e}")
                
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è GoogleSheetsClient: {e}")
        logger.error(f"   –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
        import traceback
        logger.error(f"   –î–µ—Ç–∞–ª–∏: {traceback.format_exc()}")

if __name__ == "__main__":
    debug_google_sheets()
