#!/usr/bin/env python3
"""
–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤ –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
"""

import asyncio
import sys
import os
from datetime import datetime
import pytz

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from main import PostAutomation
from config import STATUS_PENDING

async def force_publish_all():
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—É–±–ª–∏–∫—É–µ—Ç –≤—Å–µ –ø–æ—Å—Ç—ã"""
    
    print("üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É
    automation = PostAutomation()
    await automation.initialize()
    
    print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã
    posts = automation.sheets_client.get_all_posts()
    
    if not posts:
        print("‚ùå –ù–µ—Ç –ø–æ—Å—Ç–æ–≤ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")
        return
    
    print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(posts)} –ø–æ—Å—Ç–æ–≤")
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã
    pending_posts = [post for post in posts if post.get('status') == STATUS_PENDING]
    
    if not pending_posts:
        print("‚ùå –ù–µ—Ç –Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤")
        return
    
    print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(pending_posts)} –Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤")
    
    # –ü—É–±–ª–∏–∫—É–µ–º –∫–∞–∂–¥—ã–π –ø–æ—Å—Ç
    for i, post in enumerate(pending_posts, 1):
        print(f"\nüìù –ü—É–±–ª–∏–∫—É–µ–º –ø–æ—Å—Ç {i}/{len(pending_posts)}")
        print(f"   –°—Ç—Ä–æ–∫–∞: {post.get('row_index', 'N/A')}")
        print(f"   –í—Ä–µ–º—è: {post.get('time', 'N/A')}")
        print(f"   –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {'–¥–∞' if post.get('image_urls') else '–Ω–µ—Ç'}")
        print(f"   –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞: {len(post.get('text', ''))} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤ —Ç–µ–∫—Å—Ç–∞
        text_preview = post.get('text', '')[:100]
        if len(post.get('text', '')) > 100:
            text_preview += "..."
        print(f"   –¢–µ–∫—Å—Ç: {text_preview}")
        
        # –ü—É–±–ª–∏–∫—É–µ–º –ø–æ—Å—Ç
        success = await automation.publish_post(post)
        
        if success:
            print(f"   ‚úÖ –ü–æ—Å—Ç {i} –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞ {i}")
        
        # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø–æ—Å—Ç–∞–º–∏
        await asyncio.sleep(2)
    
    print(f"\nüéØ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}")
    print(f"   –ù–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö: {len(pending_posts)}")
    print(f"   –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {automation.daily_stats['published']}")
    print(f"   –û—à–∏–±–æ–∫: {automation.daily_stats['errors']}")
    
    print("\nüì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–Ω–∞–ª Telegram:")
    print("   - –ü–æ—Å—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –í–ù–ò–ó–£")
    print("   - HTML —Ç–µ–≥–∏ –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("   - –ü–æ—Å—Ç—ã –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–æ–ª–∂–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Markdown")

if __name__ == "__main__":
    asyncio.run(force_publish_all())