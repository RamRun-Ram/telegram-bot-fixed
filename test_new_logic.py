#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Å—Ç–æ–≤
"""

import asyncio
import sys
import os
from datetime import datetime, timedelta
import pytz

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from google_sheets_client import GoogleSheetsClient
from config import GOOGLE_SHEET_ID, STATUS_PENDING

async def test_new_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Å—Ç–æ–≤"""
    
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Å—Ç–æ–≤...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç Google Sheets
    sheets_client = GoogleSheetsClient()
    
    if not sheets_client.service:
        print("‚ùå Google Sheets API –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        return
    
    print("‚úÖ Google Sheets API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    moscow_tz = pytz.timezone('Europe/Moscow')
    now = datetime.now(moscow_tz)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã —Å —Ä–∞–∑–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º
    test_posts = []
    
    # –ü–æ—Å—Ç –≤ –ø—Ä–æ—à–ª–æ–º (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω)
    past_time = now - timedelta(minutes=10)
    test_posts.append({
        'date': past_time.strftime("%d.%m.%Y"),
        'time': past_time.strftime("%H:%M"),
        'text': f"**–ü–æ—Å—Ç –≤ –ø—Ä–æ—à–ª–æ–º**\n\n–í—Ä–µ–º—è: {past_time.strftime('%H:%M')}\n–≠—Ç–æ—Ç –ø–æ—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω, —Ç–∞–∫ –∫–∞–∫ –µ–≥–æ –≤—Ä–µ–º—è —É–∂–µ –ø—Ä–æ—à–ª–æ.",
        'prompt_ru': '–ü–æ—Å—Ç –≤ –ø—Ä–æ—à–ª–æ–º',
        'prompt_en': 'Post in the past',
        'image_urls': '',
        'status': STATUS_PENDING,
        'description': '–ü–æ—Å—Ç –≤ –ø—Ä–æ—à–ª–æ–º (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω)'
    })
    
    # –ü–æ—Å—Ç —Å–µ–π—á–∞—Å (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω)
    current_time = now
    test_posts.append({
        'date': current_time.strftime("%d.%m.%Y"),
        'time': current_time.strftime("%H:%M"),
        'text': f"**–ü–æ—Å—Ç —Å–µ–π—á–∞—Å**\n\n–í—Ä–µ–º—è: {current_time.strftime('%H:%M')}\n–≠—Ç–æ—Ç –ø–æ—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω, —Ç–∞–∫ –∫–∞–∫ –µ–≥–æ –≤—Ä–µ–º—è –Ω–∞—Å—Ç—É–ø–∏–ª–æ.",
        'prompt_ru': '–ü–æ—Å—Ç —Å–µ–π—á–∞—Å',
        'prompt_en': 'Post now',
        'image_urls': '',
        'status': STATUS_PENDING,
        'description': '–ü–æ—Å—Ç —Å–µ–π—á–∞—Å (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω)'
    })
    
    # –ü–æ—Å—Ç –≤ –±—É–¥—É—â–µ–º (–ù–ï –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω)
    future_time = now + timedelta(minutes=5)
    test_posts.append({
        'date': future_time.strftime("%d.%m.%Y"),
        'time': future_time.strftime("%H:%M"),
        'text': f"**–ü–æ—Å—Ç –≤ –±—É–¥—É—â–µ–º**\n\n–í—Ä–µ–º—è: {future_time.strftime('%H:%M')}\n–≠—Ç–æ—Ç –ø–æ—Å—Ç –ù–ï –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω, —Ç–∞–∫ –∫–∞–∫ –µ–≥–æ –≤—Ä–µ–º—è –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—É–ø–∏–ª–æ.",
        'prompt_ru': '–ü–æ—Å—Ç –≤ –±—É–¥—É—â–µ–º',
        'prompt_en': 'Post in the future',
        'image_urls': '',
        'status': STATUS_PENDING,
        'description': '–ü–æ—Å—Ç –≤ –±—É–¥—É—â–µ–º (–ù–ï –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω)'
    })
    
    # –ü–æ—Å—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –≤ –ø—Ä–æ—à–ª–æ–º (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω)
    past_image_time = now - timedelta(minutes=5)
    test_posts.append({
        'date': past_image_time.strftime("%d.%m.%Y"),
        'time': past_image_time.strftime("%H:%M"),
        'text': f"<b>–ü–æ—Å—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –≤ –ø—Ä–æ—à–ª–æ–º</b>\n\n<i>–í—Ä–µ–º—è:</i> {past_image_time.strftime('%H:%M')}\n–≠—Ç–æ—Ç –ø–æ—Å—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω.",
        'prompt_ru': '–ü–æ—Å—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –≤ –ø—Ä–æ—à–ª–æ–º',
        'prompt_en': 'Post with image in the past',
        'image_urls': 'https://picsum.photos/800/600?random=1',
        'status': STATUS_PENDING,
        'description': '–ü–æ—Å—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –≤ –ø—Ä–æ—à–ª–æ–º (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω)'
    })
    
    # –ü–æ—Å—Ç —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –≤ –ø—Ä–æ—à–ª–æ–º (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω)
    past_multi_time = now - timedelta(minutes=3)
    test_posts.append({
        'date': past_multi_time.strftime("%d.%m.%Y"),
        'time': past_multi_time.strftime("%H:%M"),
        'text': f"**–ü–æ—Å—Ç —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –≤ –ø—Ä–æ—à–ª–æ–º**\n\n*–í—Ä–µ–º—è:* {past_multi_time.strftime('%H:%M')}\n–≠—Ç–æ—Ç –ø–æ—Å—Ç —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω.",
        'prompt_ru': '–ü–æ—Å—Ç —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –≤ –ø—Ä–æ—à–ª–æ–º',
        'prompt_en': 'Post with multiple images in the past',
        'image_urls': 'https://picsum.photos/800/600?random=1, https://picsum.photos/800/600?random=2, https://picsum.photos/800/600?random=3',
        'status': STATUS_PENDING,
        'description': '–ü–æ—Å—Ç —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –≤ –ø—Ä–æ—à–ª–æ–º (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω)'
    })
    
    print(f"\nüìä –°–æ–∑–¥–∞–Ω–æ {len(test_posts)} —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤:")
    for i, post in enumerate(test_posts, 1):
        print(f"   {i}. {post['description']} - {post['time']}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç—ã –≤ Google Sheets
    success_count = 0
    for i, post in enumerate(test_posts, 1):
        print(f"\nüìù –î–æ–±–∞–≤–ª—è–µ–º {post['description']}")
        
        post_data = {
            'date': post['date'],
            'time': post['time'],
            'text': post['text'],
            'prompt_ru': post['prompt_ru'],
            'prompt_en': post['prompt_en'],
            'image_urls': post['image_urls'],
            'status': post['status']
        }
        
        success = sheets_client.add_post(post_data)
        
        if success:
            print(f"   ‚úÖ –ü–æ—Å—Ç {i} –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            success_count += 1
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞ {i}")
    
    print(f"\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üìä –î–æ–±–∞–≤–ª–µ–Ω–æ {success_count}/{len(test_posts)} –ø–æ—Å—Ç–æ–≤")
    print(f"\nüìã –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    print(f"   ‚úÖ –ü–æ—Å—Ç—ã –≤ –ø—Ä–æ—à–ª–æ–º –∏ —Å–µ–π—á–∞—Å –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã")
    print(f"   ‚ùå –ü–æ—Å—Ç –≤ –±—É–¥—É—â–µ–º –ù–ï –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω")
    print(f"   üîÑ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã")
    print(f"   üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–Ω–∞–ª —á–µ—Ä–µ–∑ 2-3 –º–∏–Ω—É—Ç—ã")

if __name__ == "__main__":
    asyncio.run(test_new_logic())
