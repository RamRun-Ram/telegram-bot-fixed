#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ—Å—Ç–∞—Ö Google Sheets
"""
import os
import sys
from datetime import datetime, timedelta
import pytz

def fix_date_format_in_sheets():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –≤ Google Sheets"""
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –§–û–†–ú–ê–¢–ê –î–ê–¢–´ –í GOOGLE SHEETS")
    print("=" * 60)
    
    try:
        from google_sheets_client import GoogleSheetsClient
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç
        client = GoogleSheetsClient()
        
        if not client.service:
            print("‚ùå Google Sheets API –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return False
        
        print("‚úÖ Google Sheets API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã
        all_posts = client.get_all_posts()
        print(f"üìä –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ: {len(all_posts)}")
        
        if not all_posts:
            print("‚ùå –ù–µ—Ç –ø–æ—Å—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ")
            return False
        
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å—Ç—ã —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –¥–∞—Ç—ã
        posts_to_fix = []
        for post in all_posts:
            date_str = post.get('date', '')
            if date_str and '.' in date_str:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –≥–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 20.09.25)
                parts = date_str.split('.')
                if len(parts) == 3 and len(parts[2]) == 2:
                    posts_to_fix.append(post)
        
        print(f"üîç –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤ —Å –∫–æ—Ä–æ—Ç–∫–∏–º –≥–æ–¥–æ–º: {len(posts_to_fix)}")
        
        if not posts_to_fix:
            print("‚úÖ –í—Å–µ –ø–æ—Å—Ç—ã —É–∂–µ –∏–º–µ—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã")
            return True
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã
        print(f"\nüîß –ò–°–ü–†–ê–í–õ–Ø–ï–ú –§–û–†–ú–ê–¢ –î–ê–¢–´...")
        fixed_count = 0
        
        for i, post in enumerate(posts_to_fix):
            try:
                old_date = post.get('date', '')
                old_time = post.get('time', '')
                row_index = post.get('row_index', '')
                
                print(f"   {i+1}. –°—Ç—Ä–æ–∫–∞ {row_index}: {old_date} {old_time}")
                
                # –ü–∞—Ä—Å–∏–º —Å—Ç–∞—Ä—É—é –¥–∞—Ç—É
                try:
                    old_datetime = datetime.strptime(f"{old_date} {old_time}", "%d.%m.%y %H:%M")
                    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –ø–æ–ª–Ω—ã–π –≥–æ–¥
                    new_date = old_datetime.strftime("%d.%m.%Y")
                    new_time = old_datetime.strftime("%H:%M")
                    
                    print(f"      –°—Ç–∞—Ä–∞—è –¥–∞—Ç–∞: {old_date}")
                    print(f"      –ù–æ–≤–∞—è –¥–∞—Ç–∞: {new_date}")
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å—Ç –≤ Google Sheets
                    # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—Ç—ã
                    # –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å
                    print(f"      ‚úÖ –§–æ—Ä–º–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
                    fixed_count += 1
                    
                except Exception as e:
                    print(f"      ‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Å—Ç–∞ {i+1}: {e}")
        
        print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
        print(f"   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(posts_to_fix)}")
        print(f"   –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: {fixed_count}")
        
        if fixed_count > 0:
            print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:")
            print(f"   –í—Ä—É—á–Ω—É—é –æ–±–Ω–æ–≤–∏—Ç–µ –¥–∞—Ç—ã –≤ Google Sheets:")
            print(f"   - –ó–∞–º–µ–Ω–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç '20.09.25' –Ω–∞ '20.09.2025'")
            print(f"   - –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫—Ä–∏–ø—Ç create_immediate_test_posts.py")
            return True
        else:
            print(f"\n‚ùå –ù–ï –£–î–ê–õ–û–°–¨ –ò–°–ü–†–ê–í–ò–¢–¨ –§–û–†–ú–ê–¢ –î–ê–¢–´")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def create_new_test_posts():
    """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –¥–∞—Ç—ã"""
    print("\nüöÄ –°–û–ó–î–ê–ù–ò–ï –ù–û–í–´–• –¢–ï–°–¢–û–í–´–• –ü–û–°–¢–û–í")
    print("=" * 60)
    
    try:
        from google_sheets_client import GoogleSheetsClient
        from config import STATUS_PENDING
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç
        client = GoogleSheetsClient()
        
        if not client.service:
            print("‚ùå Google Sheets API –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return False
        
        # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ø–æ –ú–æ—Å–∫–≤–µ
        moscow_tz = pytz.timezone('Europe/Moscow')
        current_time = datetime.now(moscow_tz)
        
        print(f"üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {current_time.strftime('%Y-%m-%d %H:%M:%S MSK')}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –¥–∞—Ç—ã
        test_posts = []
        
        # –ü–æ—Å—Ç 1: –ù–∞ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å
        post1_time = current_time
        test_posts.append({
            "date": post1_time.strftime("%d.%m.%Y"),
            "time": post1_time.strftime("%H:%M"),
            "text": f"<b>üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –¢–ï–°–¢–û–í–´–ô –ü–û–°–¢ #1</b><br><br>–≠—Ç–æ—Ç –ø–æ—Å—Ç —Å–æ–∑–¥–∞–Ω —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –¥–∞—Ç—ã –∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ.<br><br><i>–í—Ä–µ–º—è:</i> {post1_time.strftime('%H:%M:%S MSK')}<br><br>–§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã: {post1_time.strftime('%d.%m.%Y')}",
            "prompt_ru": "",
            "prompt_en": "",
            "image_urls": "",
            "status": STATUS_PENDING
        })
        
        # –ü–æ—Å—Ç 2: –ù–∞ 1 –º–∏–Ω—É—Ç—É –Ω–∞–∑–∞–¥
        post2_time = current_time - timedelta(minutes=1)
        test_posts.append({
            "date": post2_time.strftime("%d.%m.%Y"),
            "time": post2_time.strftime("%H:%M"),
            "text": f"<b>‚è∞ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –¢–ï–°–¢–û–í–´–ô –ü–û–°–¢ #2</b><br><br>–≠—Ç–æ—Ç –ø–æ—Å—Ç —Å–æ–∑–¥–∞–Ω —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –¥–∞—Ç—ã –∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ.<br><br><i>–í—Ä–µ–º—è:</i> {post2_time.strftime('%H:%M:%S MSK')}<br><br>–§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã: {post2_time.strftime('%d.%m.%Y')}",
            "prompt_ru": "",
            "prompt_en": "",
            "image_urls": "",
            "status": STATUS_PENDING
        })
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç—ã –≤ Google Sheets
        print(f"\nüìã –î–û–ë–ê–í–õ–Ø–ï–ú –ù–û–í–´–ï –¢–ï–°–¢–û–í–´–ï –ü–û–°–¢–´...")
        success_count = 0
        
        for i, post in enumerate(test_posts):
            try:
                result = client.add_post(post)
                if result:
                    print(f"   ‚úÖ –ü–æ—Å—Ç {i+1}/2 –¥–æ–±–∞–≤–ª–µ–Ω: {post['date']} {post['time']}")
                    success_count += 1
                else:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞ {i+1}/2")
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞ {i+1}/2: {e}")
        
        print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
        print(f"   –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {success_count}/{len(test_posts)}")
        
        if success_count > 0:
            print(f"\nüéØ –ù–û–í–´–ï –¢–ï–°–¢–û–í–´–ï –ü–û–°–¢–´ –°–û–ó–î–ê–ù–´!")
            print(f"‚è∞ –ü–æ—Å—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –º–∏–Ω—É—Ç")
            print(f"üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–Ω–∞–ª: t.me/sovpalitest")
            return True
        else:
            print(f"\n‚ùå –ù–ï –£–î–ê–õ–û–°–¨ –°–û–ó–î–ê–¢–¨ –ù–û–í–´–ï –¢–ï–°–¢–û–í–´–ï –ü–û–°–¢–´")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ –° –§–û–†–ú–ê–¢–û–ú –î–ê–¢–´")
    print("=" * 80)
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ—Å—Ç—ã
    fix_ok = fix_date_format_in_sheets()
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã
    create_ok = create_new_test_posts()
    
    print(f"\nüìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"   –ê–Ω–∞–ª–∏–∑ –ø–æ—Å—Ç–æ–≤: {'‚úÖ OK' if fix_ok else '‚ùå ERROR'}")
    print(f"   –ù–æ–≤—ã–µ –ø–æ—Å—Ç—ã: {'‚úÖ OK' if create_ok else '‚ùå ERROR'}")
    
    if create_ok:
        print(f"\nüéâ –ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê!")
        print(f"üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–Ω–∞–ª t.me/sovpalitest")
        print(f"‚è∞ –ù–æ–≤—ã–µ –ø–æ—Å—Ç—ã –¥–æ–ª–∂–Ω—ã –ø–æ—è–≤–∏—Ç—å—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –º–∏–Ω—É—Ç")
    else:
        print(f"\n‚ùå –ü–†–û–ë–õ–ï–ú–ê –ù–ï –†–ï–®–ï–ù–ê!")
        print(f"üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Railway")

if __name__ == "__main__":
    main()
