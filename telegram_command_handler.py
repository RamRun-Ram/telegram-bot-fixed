"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ Telegram
"""
import asyncio
import logging
import threading
from datetime import datetime
from typing import Optional
import telebot
from ai_post_generator import AIPostGenerator
from google_sheets_client_simple import GoogleSheetsClient
from config import TELEGRAM_BOT_TOKEN, NOTIFICATION_CHANNEL_ID, COMMAND_CHANNEL_ID

logger = logging.getLogger(__name__)

class TelegramCommandHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ Telegram –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–º–∏"""
    
    def __init__(self):
        self.bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)
        self.sheets_client = GoogleSheetsClient()
        self.ai_generator = AIPostGenerator()
        self.setup_handlers()
    
    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        
        def is_authorized_user(message):
            """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥"""
            # –†–∞–∑—Ä–µ—à–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –∏–∑ –≥—Ä—É–ø–ø—ã AlertChanel
            if str(message.chat.id) == COMMAND_CHANNEL_ID or message.chat.username == "alertchanel":
                logger.info(f"–ö–æ–º–∞–Ω–¥–∞ –∏–∑ –≥—Ä—É–ø–ø—ã AlertChanel: {message.text}")
                return True
            
            # –†–∞–∑—Ä–µ—à–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –∏–∑ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
            if message.chat.type == 'private':
                logger.info(f"–ö–æ–º–∞–Ω–¥–∞ –∏–∑ –ª–∏—á–Ω–æ–≥–æ —á–∞—Ç–∞: {message.text}")
                return True
            
            logger.info(f"–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∏–∑ —á–∞—Ç–∞ {message.chat.id} (—Ç–∏–ø: {message.chat.type}): {message.text}")
            return False
        
        @self.bot.message_handler(commands=['start'])
        def start_command(message):
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
            if not is_authorized_user(message):
                return
            self.bot.reply_to(message, 
                "ü§ñ –ë–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–º–∏ –∑–∞–ø—É—â–µ–Ω!\n\n"
                "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                "‚Ä¢ /post - –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç—ã –Ω–∞ 3 –¥–Ω—è\n"
                "‚Ä¢ /status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã\n"
                "‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"
            )
        
        @self.bot.message_handler(commands=['help'])
        def help_command(message):
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
            if not is_authorized_user(message):
                return
            self.bot.reply_to(message,
                "üìã –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:\n\n"
                "‚Ä¢ /post - –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ—Å—Ç—ã –Ω–∞ 3 –¥–Ω—è –≤ Google –¢–∞–±–ª–∏—Ü—É\n"
                "‚Ä¢ /status - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å—Ç–æ–≤\n"
                "‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
                "üí° –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ '–ø–æ—Å—Ç' –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤!"
            )
        
        @self.bot.message_handler(commands=['post'])
        def post_command(message):
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /post"""
            if not is_authorized_user(message):
                return
            self.handle_post_generation(message)
        
        @self.bot.message_handler(commands=['status'])
        def status_command(message):
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /status"""
            if not is_authorized_user(message):
                return
            self.handle_status_check(message)
        
        @self.bot.message_handler(func=lambda message: message.text and message.text.lower().strip() == '–ø–æ—Å—Ç')
        def post_text_handler(message):
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞ '–ø–æ—Å—Ç'"""
            if not is_authorized_user(message):
                return
            self.handle_post_generation(message)
        
        @self.bot.message_handler(func=lambda message: True)
        def debug_handler(message):
            """–û—Ç–ª–∞–¥–æ—á–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
            logger.info(f"DEBUG: –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ '{message.text}' –∏–∑ —á–∞—Ç–∞ {message.chat.id} ({message.chat.type})")
            if str(message.chat.id) == COMMAND_CHANNEL_ID:
                logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ –∫–æ–º–∞–Ω–¥, –Ω–æ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∫–∞–Ω–∞–ª
                try:
                    self.bot.reply_to(message, "–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª–µ –∫–æ–º–∞–Ω–¥, –Ω–æ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞")
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {e}")
    
    def handle_post_generation(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤"""
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
            status_msg = self.bot.reply_to(message, 
                "üîÑ –ù–∞—á–∏–Ω–∞—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø–æ—Å—Ç–æ–≤ –Ω–∞ 3 –¥–Ω—è...\n"
                "‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç..."
            )
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ—Å—Ç—ã –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            def generate_posts():
                try:
                    logger.info("–ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø–æ—Å—Ç–æ–≤ –ø–æ –∫–æ–º–∞–Ω–¥–µ –∏–∑ Telegram")
                    success = asyncio.run(self.ai_generator.generate_and_upload_weekly_posts())
                    
                    if success:
                        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                        self.bot.edit_message_text(
                            "‚úÖ –ü–æ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ Google –¢–∞–±–ª–∏—Ü—É!\n\n"
                            "üìä –°–æ–∑–¥–∞–Ω–æ 9 –ø–æ—Å—Ç–æ–≤ –Ω–∞ 3 –¥–Ω—è:\n"
                            "‚Ä¢ 3 —É—Ç—Ä–µ–Ω–Ω–∏—Ö –ø–æ—Å—Ç–∞ (08:00)\n"
                            "‚Ä¢ 3 –æ–±–µ–¥–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞ (14:00) —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏\n"
                            "‚Ä¢ 3 –≤–µ—á–µ—Ä–Ω–∏—Ö –ø–æ—Å—Ç–∞ (20:00)\n\n"
                            "üöÄ –ü–æ—Å—Ç—ã –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é!",
                            chat_id=message.chat.id,
                            message_id=status_msg.message_id
                        )
                        
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
                        self.send_notification(
                            "üìù –ù–æ–≤—ã–µ –ø–æ—Å—Ç—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã",
                            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.first_name} —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª –ø–æ—Å—Ç—ã –Ω–∞ 3 –¥–Ω—è"
                        )
                        
                    else:
                        self.bot.edit_message_text(
                            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤!\n"
                            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.",
                            chat_id=message.chat.id,
                            message_id=status_msg.message_id
                        )
                        
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤: {e}")
                    self.bot.edit_message_text(
                        f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}",
                        chat_id=message.chat.id,
                        message_id=status_msg.message_id
                    )
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            thread = threading.Thread(target=generate_posts)
            thread.daemon = True
            thread.start()
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤: {e}")
            self.bot.reply_to(message, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
    
    def handle_status_check(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å—Ç–æ–≤
            all_posts = self.sheets_client.get_all_posts()
            
            if not all_posts:
                self.bot.reply_to(message, "üìä –í —Ç–∞–±–ª–∏—Ü–µ –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ—Å—Ç–æ–≤")
                return
            
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            total_posts = len(all_posts)
            published = sum(1 for post in all_posts if post.get('status') == '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ')
            pending = sum(1 for post in all_posts if post.get('status') == '–û–∂–∏–¥–∞–µ—Ç')
            errors = sum(1 for post in all_posts if post.get('status') == '–û—à–∏–±–∫–∞')
            
            # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–∞–º
            posts_by_date = {}
            for post in all_posts:
                date = post.get('date', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                if date not in posts_by_date:
                    posts_by_date[date] = 0
                posts_by_date[date] += 1
            
            status_text = f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å—Ç–æ–≤:\n\n"
            status_text += f"üìà –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {total_posts}\n"
            status_text += f"‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {published}\n"
            status_text += f"‚è≥ –û–∂–∏–¥–∞–µ—Ç: {pending}\n"
            status_text += f"‚ùå –û—à–∏–±–∫–∏: {errors}\n\n"
            
            if posts_by_date:
                status_text += "üìÖ –ü–æ –¥–∞—Ç–∞–º:\n"
                for date, count in sorted(posts_by_date.items()):
                    status_text += f"‚Ä¢ {date}: {count} –ø–æ—Å—Ç–æ–≤\n"
            
            self.bot.reply_to(message, status_text)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞: {e}")
            self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {str(e)}")
    
    def send_notification(self, title: str, message: str):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª"""
        try:
            notification_text = f"üîî {title}\n\n{message}"
            self.bot.send_message(
                chat_id=NOTIFICATION_CHANNEL_ID,
                text=notification_text
            )
            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {title}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
    
    def start_polling(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling"""
        try:
            logger.info("–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥...")
            self.bot.polling(none_stop=True, interval=1)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
    
    def stop_polling(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞"""
        try:
            self.bot.stop_polling()
            logger.info("Telegram –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –±–æ—Ç–∞: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥
def start_command_handler():
    """–ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥"""
    handler = TelegramCommandHandler()
    handler.start_polling()

if __name__ == "__main__":
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    )
    
    # –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥
    start_command_handler()