#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤
"""
import os
import sys
from datetime import datetime, timedelta
import pytz

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîß –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø")
    print("=" * 50)
    
    # Telegram –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    telegram_vars = {
        "TELEGRAM_BOT_TOKEN": "–¢–æ–∫–µ–Ω –±–æ—Ç–∞",
        "TELEGRAM_CHANNEL_ID": "ID –∫–∞–Ω–∞–ª–∞",
        "ADMIN_CHAT_ID": "ID –∞–¥–º–∏–Ω —á–∞—Ç–∞",
        "ALERT_ADMIN_CHANNEL": "ID AlertChanel"
    }
    
    print("üì± TELEGRAM:")
    telegram_ok = True
    for var, desc in telegram_vars.items():
        value = os.getenv(var)
        if not value or value.startswith("YOUR_"):
            print(f"   ‚ùå {var}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ({desc})")
            telegram_ok = False
        else:
            print(f"   ‚úÖ {var}: OK")
    
    # Google Sheets –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    google_vars = {
        "GOOGLE_SHEET_ID": "ID —Ç–∞–±–ª–∏—Ü—ã",
        "GOOGLE_PROJECT_ID": "ID –ø—Ä–æ–µ–∫—Ç–∞",
        "GOOGLE_PRIVATE_KEY_ID": "ID –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞",
        "GOOGLE_PRIVATE_KEY": "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á",
        "GOOGLE_CLIENT_EMAIL": "Email –∫–ª–∏–µ–Ω—Ç–∞",
        "GOOGLE_CLIENT_ID": "ID –∫–ª–∏–µ–Ω—Ç–∞",
        "GOOGLE_CLIENT_X509_CERT_URL": "URL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
    }
    
    print("\nüìã GOOGLE SHEETS:")
    google_ok = True
    for var, desc in google_vars.items():
        value = os.getenv(var)
        if not value or value.startswith("YOUR_"):
            print(f"   ‚ùå {var}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ({desc})")
            google_ok = False
        else:
            print(f"   ‚úÖ {var}: OK")
    
    return telegram_ok, google_ok

def check_google_sheets():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç Google Sheets"""
    print("\nüìã –ü–†–û–í–ï–†–ö–ê GOOGLE SHEETS")
    print("=" * 50)
    
    try:
        from google_sheets_client import GoogleSheetsClient
        
        client = GoogleSheetsClient()
        
        if not client.service:
            print("‚ùå Google Sheets API –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return False, []
        
        print("‚úÖ Google Sheets API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã
        all_posts = client.get_all_posts()
        print(f"üìä –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ: {len(all_posts)}")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç—ã —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "–û–∂–∏–¥–∞–µ—Ç"
        pending_posts = client.get_pending_posts()
        print(f"‚è∞ –ü–æ—Å—Ç–æ–≤ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º '–û–∂–∏–¥–∞–µ—Ç': {len(pending_posts)}")
        
        if pending_posts:
            print(f"\nüìù –ü–û–°–¢–´ –°–û –°–¢–ê–¢–£–°–û–ú '–û–ñ–ò–î–ê–ï–¢':")
            for i, post in enumerate(pending_posts[:5]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"   {i+1}. –°—Ç—Ä–æ–∫–∞ {post.get('row_index', 'N/A')}")
                print(f"      –î–∞—Ç–∞: {post.get('date', 'N/A')}")
                print(f"      –í—Ä–µ–º—è: {post.get('time', 'N/A')}")
                print(f"      –¢–µ–∫—Å—Ç: {post.get('text', 'N/A')[:50]}...")
                print()
        
        return True, pending_posts
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Google Sheets: {e}")
        import traceback
        traceback.print_exc()
        return False, []

def check_time_logic(pending_posts):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏–∫—É –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø–æ—Å—Ç–æ–≤"""
    print("\nüïê –ü–†–û–í–ï–†–ö–ê –õ–û–ì–ò–ö–ò –í–†–ï–ú–ï–ù–ò")
    print("=" * 50)
    
    try:
        from main import TelegramAutomation
        
        automation = TelegramAutomation()
        moscow_tz = pytz.timezone('Europe/Moscow')
        current_time = datetime.now(moscow_tz)
        
        print(f"üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {current_time.strftime('%Y-%m-%d %H:%M:%S MSK')}")
        
        if not pending_posts:
            print("‚ùå –ù–µ—Ç –ø–æ—Å—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
            return False, []
        
        print(f"üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º {len(pending_posts)} –ø–æ—Å—Ç–æ–≤...")
        
        posts_to_publish = []
        for i, post in enumerate(pending_posts):
            print(f"\nüîç –ü–æ—Å—Ç {i+1}:")
            print(f"   –°—Ç—Ä–æ–∫–∞: {post.get('row_index', 'N/A')}")
            print(f"   –î–∞—Ç–∞: {post.get('date', 'N/A')}")
            print(f"   –í—Ä–µ–º—è: {post.get('time', 'N/A')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –≤—Ä–µ–º–µ–Ω–∏
            if automation._should_publish_post(post, current_time):
                posts_to_publish.append(post)
                print(f"   ‚úÖ –î–û–õ–ñ–ï–ù –ü–£–ë–õ–ò–ö–û–í–ê–¢–¨–°–Ø")
            else:
                print(f"   ‚ùå –ù–ï –ü–û–î–•–û–î–ò–¢ –ü–û –í–†–ï–ú–ï–ù–ò")
                
                # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
                post_date_str = post.get('date', '')
                post_time_str = post.get('time', '')
                
                try:
                    post_datetime = datetime.strptime(f"{post_date_str} {post_time_str}", "%d.%m.%y %H:%M")
                    post_datetime = moscow_tz.localize(post_datetime)
                    
                    time_diff = (current_time - post_datetime).total_seconds() / 60
                    
                    print(f"   üìä –î–µ—Ç–∞–ª–∏:")
                    print(f"      –í—Ä–µ–º—è –ø–æ—Å—Ç–∞: {post_datetime.strftime('%Y-%m-%d %H:%M:%S MSK')}")
                    print(f"      –†–∞–∑–Ω–∏—Ü–∞: {time_diff:.1f} –º–∏–Ω—É—Ç")
                    print(f"      –£—Å–ª–æ–≤–∏–µ: 0 <= {time_diff:.1f} <= 5")
                    print(f"      –†–µ–∑—É–ª—å—Ç–∞—Ç: {0 <= time_diff <= 5}")
                    
                except Exception as e:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤—Ä–µ–º–µ–Ω–∏: {e}")
        
        print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
        print(f"   –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {len(pending_posts)}")
        print(f"   –ö –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {len(posts_to_publish)}")
        
        return len(posts_to_publish) > 0, posts_to_publish
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏: {e}")
        import traceback
        traceback.print_exc()
        return False, []

def check_telegram():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç Telegram"""
    print("\nüì± –ü–†–û–í–ï–†–ö–ê TELEGRAM")
    print("=" * 50)
    
    try:
        from telegram_client import TelegramClient
        
        client = TelegramClient()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        print("üîå –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Telegram...")
        # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        
        print("‚úÖ Telegram –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {e}")
        import traceback
        traceback.print_exc()
        return False

def check_system_logs():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã"""
    print("\nüìù –ü–†–û–í–ï–†–ö–ê –õ–û–ì–û–í –°–ò–°–¢–ï–ú–´")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –ª–æ–≥–æ–≤
        log_file = "telegram_automation.log"
        if os.path.exists(log_file):
            print(f"‚úÖ –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–∞–π–¥–µ–Ω: {log_file}")
            
            # –ß–∏—Ç–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫
            with open(log_file, 'r', encoding='utf-8') as f:
                lines = f.readlines()
                last_lines = lines[-20:] if len(lines) > 20 else lines
                
            print(f"\nüìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ {len(last_lines)} —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤:")
            for line in last_lines:
                print(f"   {line.strip()}")
        else:
            print(f"‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: {log_file}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ª–æ–≥–æ–≤: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ü–û–õ–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ –ü–£–ë–õ–ò–ö–ê–¶–ò–ò –ü–û–°–¢–û–í")
    print("=" * 70)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    telegram_ok, google_ok = check_environment()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Google Sheets
    sheets_ok, pending_posts = check_google_sheets()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –≤—Ä–µ–º–µ–Ω–∏
    time_ok, posts_to_publish = check_time_logic(pending_posts)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram
    telegram_conn_ok = check_telegram()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
    logs_ok = check_system_logs()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\nüìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 50)
    print(f"üîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    print(f"   Telegram: {'‚úÖ OK' if telegram_ok else '‚ùå ERROR'}")
    print(f"   Google Sheets: {'‚úÖ OK' if google_ok else '‚ùå ERROR'}")
    print(f"üìã Google Sheets API: {'‚úÖ OK' if sheets_ok else '‚ùå ERROR'}")
    print(f"üïê –õ–æ–≥–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–∏: {'‚úÖ OK' if time_ok else '‚ùå ERROR'}")
    print(f"üì± Telegram —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ: {'‚úÖ OK' if telegram_conn_ok else '‚ùå ERROR'}")
    print(f"üìù –õ–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã: {'‚úÖ OK' if logs_ok else '‚ùå ERROR'}")
    
    if posts_to_publish:
        print(f"\nüéØ –ü–û–°–¢–´ –ö –ü–£–ë–õ–ò–ö–ê–¶–ò–ò: {len(posts_to_publish)}")
        for i, post in enumerate(posts_to_publish):
            print(f"   {i+1}. –°—Ç—Ä–æ–∫–∞ {post.get('row_index', 'N/A')}: {post.get('date', 'N/A')} {post.get('time', 'N/A')}")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    if not telegram_ok or not google_ok:
        print("   ‚ùå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ Railway")
    if not sheets_ok:
        print("   ‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å Google Sheets API")
    if not time_ok:
        print("   ‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –ª–æ–≥–∏–∫–æ–π –≤—Ä–µ–º–µ–Ω–∏")
    if not telegram_conn_ok:
        print("   ‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å Telegram —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º")
    if posts_to_publish and not telegram_conn_ok:
        print("   ‚ö†Ô∏è –ï—Å—Ç—å –ø–æ—Å—Ç—ã –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏, –Ω–æ –ø—Ä–æ–±–ª–µ–º–∞ —Å Telegram")
    
    if all([telegram_ok, google_ok, sheets_ok, time_ok, telegram_conn_ok]):
        print("   üéâ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
        if posts_to_publish:
            print("   üì± –ü–æ—Å—Ç—ã –¥–æ–ª–∂–Ω—ã –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å—Å—è –≤ Telegram")
        else:
            print("   ‚è∞ –ù–µ—Ç –ø–æ—Å—Ç–æ–≤ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç")

if __name__ == "__main__":
    main()
